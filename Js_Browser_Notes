:: JavaScript::

defer - used to wait for the html body to finish load (DOMcontentLoaded event)
async - same but no specific order loads asynchronously

::::::::::::::::::::::::::::: Alerts :::::::::::::::::::::::::::::::::::

alert('');
prompt() - Input return
confirm('') - return 'YES' or 'NO'

:::::::::::::::::::::::::::: Window Object ::::::::::::::::::::::::::::::::::::::::

window. outerHeight and innerHeight
		outerWidth and innerWidth
		
		scrollX and scrollY - scroll bar points
		
		location - Details of the system using
				 - href, reload, hostname, port	

		history - Manipulate the history
				- go(), length
				
		navigator - Manipulate the browser 
				  - vendor, platform, appname, version, language
					
::::::::::::::::::::::::::::::::::: Document Object Model :::::::::::::::::::::::::::::::::::::::::

document, attribute, element, text

item = document.getElementById("#");
list = document.getElementByClassName(".");
item = document.getElementByTagName("")[]; -- Should specify the array 

item = document.querySelector('. # '); -- Instead of using getElement
item = document.querySelectorAll("");

Printing in the DOM from Script:

	item.innerText =""; -- pays attention to the style
	item.textContent ="";
	item.innerHtml = ""; -- create elements

item.style.color =""; -- changing the styles
    .style.borderBottom ="solid 10px blue"

list[1].style.display = none; -- Doesnt show the elements in the DOM.

::::::::::::::::::::::::::::::::::::::: Structural access :::::::::::::::::::::::::::::::::::::::::

Nodes and Elements are different were nodes include the whitespaces

document.querySelector(ul li:lastChild).style.color = 'red';
document.querySelector(ul li:nth-child(2)).style.color = 'blue';

item.parentNode, 
parentElement, 
childNodes, 
children, 
lastChild, 
lastElementChild, 

nextSibling, 
nextElementSibling, 
previousSibling, 
previousElementSibling, 

appendChild(only access child), 
append(can add a string and use as text node)
prepend()
removeChild 
replaceChild
createTextNode

getAttribute();
setAttribute('','');
hasAttribute();
removeAttribute();

::::::::::::::::::::::::::::::::::::::: Creating Element :::::::::::::::::::::::::::::::::::::::

var tag =  document.createElement('div');
div.className = "helo";
div.setAtt('title', 'Hello Div');
var txt = doc.createTextNode('Hello World');
div.appendChild(txt);
var container = doc.querySelector('header');
var h1 = doc.querySelector('h1');
container.insertBefore(div, h1);

Above Creates -- <div class="helo" title="Hello Div">Hello World</div>

insertAdjacentElement('beforebegin', 'afterbegin', beforeend, afterend) 
cloneNode(true or false(deep or not`)) - clones the element

Events::

	var btn = document.getElementById();
		
		btn.addEventListener("keydown,focus,blur,cut,click,mouseover,input,change,submit", function(event){
			
			console.log(event) -- To get to know the event details
			event.keycode; -- Returns the key event codes
			event.target.attributes; -- Gets the element clicked
			event.target.value; -- to get a input value
			event.ctrlKey;
			event.offsetX, e.offsetY
			removeEventListener("click", function()) -- removes the listener, using it here plays the event once.
		});
		
	"event" has its own properties to be manupulated
	event.preventDefault() - Stops its default behaviour(logs or executes the callback rather than redirecting when clicked)
	
	href='#' or e.preventDefault to stop redirecting.
	
		
	e.clientX or clientY - Coords relative to the window
	e.offsetX or offsetY - Coords relative to the element
	e.timeStamp
	
	
::::::::::::::::::::::: Events list :::::::::::::::::::::::::
	
	click
	dblclick
	mousedown
	mouseup
	mouseenter, mouseleave - both work on only main element
	mouseover
	mouseout, mousemove - All inner element
	keyup, keydown
	keypress
	focus, blur
	cut, paste, copy, undo
	input(common for above 4)
	change


EventBubbling - All events default bubbles up till the parent elements
EventDelegation - Specify the parent to work

::::::::::::::::::::::: Local and Sessions Storage :::::::::::::::::::::::::

localStorage - stays
sessionStorage - clears when browser closed
	.getItem('',''), setItem('',''), clear()

JSON.parse(localStorage.getItem('')) - to get
JSON.stringify(localStorage.setItem('')) - to set 



	
Refer to SS -- DOM1, DOM2
	
